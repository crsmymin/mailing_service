<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mail">
	<select id="getSendList" parameterType="String" resultType="SendListVO">
               
		SELECT send_list_id,
			send_subject,
			contents_id,
			send_datetime,
			send_status,
			send_mail_list,
			(select count(*) from mail_send_result As r where r.send_list_id=l.send_list_id ) as send_cnt,
			(select count(*) from mail_send_result As r where r.send_list_id=l.send_list_id and send_result_yn='y') as send_succ_cnt,
			(select count(*) from mail_send_result As r where r.send_list_id=l.send_list_id and send_result_yn='n' ) as send_fail_cnt,
			(select count(*) from mail_send_result As r where r.send_list_id=l.send_list_id and send_mail_check_yn='y' ) as mail_check,
			(select count(*) from mail_send_result As r where r.send_list_id=l.send_list_id and send_mail_check_date is not null) as mail_reject
		FROM reverse_mail.mail_send_list l
		WHERE delete_date IS NULL
        <if test='value != null'>
			AND send_list_id = #{0}
		</if>        
     </select>
     
     <insert id="insertSendMail" useGeneratedKeys="true" keyProperty="send_list_id" parameterType="SendListVO">
     
     			INSERT INTO reverse_mail.mail_send_list
						(contents_id,
						send_subject,
						send_mail_list,
						send_datetime)
						VALUES	
              			(#{contents_id}, #{send_subject}, #{send_mail_list}, #{send_datetime})
     </insert>
     
	<update id="deleteSendMail" parameterType="String" >
	  update reverse_mail.mail_send_list set
	    delete_date = now()
	  where send_list_id in (${value})
	</update>
	
	<update id="updateSendingMail" parameterType="String" >
	  update reverse_mail.mail_send_list set
	    send_status = '전송중'
	  where send_list_id in (${value})
	</update>
	
	<update id="updateSendingEndMail" parameterType="String" >
	  update reverse_mail.mail_send_list set
	    send_status = '전송완료'
	  where send_list_id in (${value})
	</update>
	

     <select id="getSendResultList" parameterType="String" resultType="SendResultVO" >
               
		SELECT send_result_id,
			send_list_id,
			send_mail,
			send_date,
			send_result_yn,
			send_mail_check_yn,
			send_mail_check_date,
			reject_date,
            (select member_name from mail_member m where r.send_mail=m.member_mail LIMIT 1) as member_name
		FROM reverse_mail.mail_send_result r
		WHERE 1=1
		<if test='value != null'>
			AND send_list_id = #{0}
		</if>
     </select>
     
      <insert id="insertSendResult" parameterType="java.util.List">
     
     			INSERT INTO reverse_mail.mail_send_result
						(send_list_id,
						send_mail
						)
						VALUES	
				<foreach collection="list" item="item" separator=" , " >
			        (#{item.send_list_id},#{item.send_mail})
			    </foreach>
     </insert>
     
     <select id="sendMail" resultType="SendResultVO" >
        <![CDATA[       
			SELECT send_result_id,
				r.send_list_id,
				send_mail,
				send_date,
				send_result_yn,
				send_mail_check_yn,
				send_mail_check_date,
				reject_date,
	            send_subject,
	            send_datetime,
	            contents_html,
	            send_status
			FROM reverse_mail.mail_send_result r
	        JOIN mail_send_list l ON r.send_list_id = l.send_list_id
	        JOIN mail_contents c ON c.contents_id = l.contents_id
			WHERE l.delete_date is null
	        and reject_date is null
	        and send_status ='대기중'
	        and send_datetime < now()
        ]]>
     </select>
     
     <update id="updateSuccMail" parameterType="String" >
	  update reverse_mail.mail_send_result set
	    send_result_yn = 'y',
	    send_date=now()
	  where send_result_id in (${value})
	</update>
	
	<update id="updateFailMail" parameterType="String" >
	  update reverse_mail.mail_send_result set
	    send_result_yn = 'n',
	    send_date=now()
	  where send_result_id in (${value})
	</update>
	
	 <update id="updateCheckedMail" parameterType="String" >
	  update reverse_mail.mail_send_result set
	    send_mail_check_yn='y',
	    send_mail_check_date=now()
	  where send_result_id in (${value})
	</update>
	
	<update id="updateRejectMail" parameterType="String" >
	  update reverse_mail.mail_send_result set
	    reject_date=now()
	  where send_result_id in (${value})
	</update>
</mapper>
